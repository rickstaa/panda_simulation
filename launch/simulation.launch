<!-- Panda simulation launchfile
    This launch file launches launches the panda_simulation.
-->
<launch>

    <!--## ARGUMENTS ##-->
    <!-- Main arguments -->
    <arg name="load_robot_state_publisher" default="true" />
    <arg name="load_controllers" default="true" />

    <!-- Allow user to specify if they want an extra gripper center frame -->
    <arg name="grip_site" default="false" />
    <arg name="grip_site_xyz" default="0.0 0.0 0.10" />
    <arg name="grip_site_rpy" default="0.0 0.0 0.0" />

    <!-- Main MOVEIT arguments -->
    <arg name="moveit" default="true" />
    <arg name="moveit_rviz_file" default="$(find panda_moveit_config)/launch/moveit.rviz" />

    <!-- Main GAZEBO arguments -->
    <arg name="gazebo" default="true" />
    <arg name="gazebo_gui" default="true" />
    <arg name="paused" default="false" />
    <arg name="use_sim_time" default="true" />
    <arg name="rviz" default="true" />
    <arg name="headless" default="false" />
    <arg name="debug" default="false" />
    <arg name="load_gripper" default="true" />
    <arg name="world_name" default="worlds/empty.world" />

    <!-- Load robot description -->
    <param if="$(arg load_gripper)" name="robot_description" command="$(find xacro)/xacro --inorder $(find franka_description)/robots/panda_arm_hand.urdf.xacro" />
    <param unless="$(arg load_gripper)" name="robot_description" command="$(find xacro)/xacro --inorder $(find franka_description)/robots/panda_arm.urdf.xacro" />

    <!-- GAZEBO robot arguments -->
    <!--- Initial robot position -->
    <arg name="J1" default="0.0" />
    <arg name="J2" default="0.0" />
    <arg name="J3" default="0.0" />
    <arg name="J4" default="-0.0698" />
    <arg name="J5" default="0.0" />
    <arg name="J6" default="-0.0175" />
    <arg name="J7" default="0.9124" />
    <arg name="J8" default="0.04" />
    <arg name="J9" default="0.04" />

    <!--## GAZEBO NODES ##-->
    <!-- Set private (internal) launch file arguments -->
    <group if="$(arg gazebo)">
        <arg unless="$(arg paused)" name="_unpause_arg" value="-unpause" />
        <arg if="$(arg paused)" name="_unpause_arg" value="" />

        <!--launch GAZEBO with own world configuration -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(arg world_name)" />
            <arg name="debug" value="$(arg debug)" />
            <arg name="gui" value="$(arg gazebo_gui)" />
            <arg name="paused" value="true" />
            <arg name="use_sim_time" value="$(arg use_sim_time)" />
            <arg name="headless" value="$(arg headless)" />
        </include>

        <!-- Create gripper spwan position if load_gripper == True -->
        <arg if="$(arg load_gripper)" name="_gripper_spawn_arg" value="-J panda_finger_joint1 $(arg J8) -J panda_finger_joint2 $(arg J9)" />
        <arg unless="$(arg load_gripper)" name="_gripper_spawn_arg" value="" />

        <!-- Spawn panda_robot model
        NOTE: Unpause needed to set robot position (see https://github.com/ros-simulation/gazebo_ros_pkgs/issues/93)-->
        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model panda
            -J panda_joint1 $(arg J1)
            -J panda_joint2 $(arg J2)
            -J panda_joint3 $(arg J3)
            -J panda_joint4 $(arg J4)
            -J panda_joint5 $(arg J5)
            -J panda_joint6 $(arg J6)
            -J panda_joint7 $(arg J7) $(arg _gripper_spawn_arg) $(arg _unpause_arg)" />
    </group>

    <!--## CONTROLLER NODES ##-->
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <group if="$(arg load_controllers)">
        <rosparam file="$(find panda_simulation)/config/panda_control.yaml" command="load" />

        <!-- load the controllers -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller panda_arm_controller" />
        <node if="$(arg load_gripper)" name="controller_spawner_hand" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="panda_hand_controller" />

    </group>

    <!--## ROBOT STATE PUBLISHER ##-->
    <!-- convert joint states to TF transforms for rviz, etc -->
    <node if="$(arg load_robot_state_publisher)" name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    <!--## MOVEIT NODES ##-->
    <!-- Load moveit related nodes -->
    <group if="$(arg moveit)">
        <!-- If moveit argument is true -->
        <include file="$(find panda_moveit_config)/launch/planning_context.launch">
            <arg name="load_robot_description" value="true" />
            <arg name="load_gripper" value="$(arg load_gripper)" />
            <arg name="grip_site" value="$(arg grip_site)" />
            <arg name="grip_site_xyz" value="$(arg grip_site_xyz)" />
            <arg name="grip_site_rpy" value="$(arg grip_site_rpy)" />
        </include>
        <include file="$(find panda_moveit_config)/launch/move_group.launch">
            <arg name="load_gripper" value="$(arg load_gripper)" />
            <arg name="grip_site" value="$(arg grip_site)" />
            <arg name="grip_site_xyz" value="$(arg grip_site_xyz)" />
            <arg name="grip_site_rpy" value="$(arg grip_site_rpy)" />
        </include>
        <group if="$(arg rviz)">
            <include file="$(find panda_moveit_config)/launch/moveit_rviz.launch">
                <arg name="rviz_file" value="$(arg moveit_rviz_file)" />
            </include>
        </group>
        <node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" />

        <!-- launch robot control node for moveit motion planning -->
        <node pkg="panda_simulation" type="robot_control_node" name="robot_control_node" output="screen" />
    </group>
</launch>